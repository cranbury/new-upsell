{% assign title = '' %}
{% assign description ='' %}
{% assign productAddedMessage ='' %}

{% comment %} ClimaSense Comforter {% endcomment %}
{% if product.id == 6824157577277 %} 
  {% assign title = 'ADD A DUVET COVER' %}
  {% assign description = 'Protect your comforter while adding style and softness with one of our premium Duvet Covers.' %}
  {% assign productAddedMessage = 'DUVET COVER ADDED' %}

{% comment %} Removable Cover Weighted Blanket or Coooling Weighted Weighted Blanket{% endcomment %}
{% elsif product.id == 1482350919749 or product.id == 2140387999813  or product.id == 6890447896637 %}
  {% assign title = 'ADD AN EXTRA BLANKET COVER' %}
  {% assign description = 'Change up the look and feel of your weighted blanket with an additional premium removable cover - featuring our popular luxury fabrics.' %}
  {% assign productAddedMessage = 'BLANKET COVER ADDED' %}


{% comment %} Duvet Cover{% endcomment %}
{% elsif product.id == 6824646279229 %}
  {% assign title = 'ADD A MATCHING PILLOWCASE SET' %}
  {% assign description = 'Complete the look with a Pillowcase Set.' %}
  {% assign productAddedMessage = 'PILLOWCASE SET ADDED' %}

{% endif %}


<div id="blanket-cover-upsell" data-checked="false" >
  <div id="blanket-cover-upsell-header">
    <div>
      <span id="blanket-cover-upsell-title"> {{ title }}</span>
      <span id="blanket-cover-upsell-subtitle">See Details</span>
    </div>
    <div id="blanket-cover-upsell-checkbox">
      <img id="blanket-cover-upsell-check" src="{{ 'white-check-mark.png' | asset_url }}" width="15" height="13">
    </div>
  </div>
  
  <div id="blanket-cover-upsell-description">{{ description }}</div>
  
  <div id="blanket-cover-upsell-variants">
    <img src="" id="blanket-cover-upsell-variant-img">
    
    <div class="blanket-cover-upsell-custom-select-id custom-select-container"><select name="blanket-cover-upsell-id" id="blanket-cover-upsell-variant"></select></div>

<!--     <div class="blanket-cover-upsell-custom-select-qty custom-select-container">
      <select name="blanket-cover-upsell-quantity" id="blanket-cover-upsell-variant-quantity">
        <option value="0" disabled>Quantity:</option>
        <option value="1">1</option>
        <option value="2">2</option>
        <option value="3">3</option>
        <option value="4">4</option>
        <option value="5">5</option>
      </select>
    </div> -->

    <div id="blanket-cover-upsell-add">
      ADD
    </div>
  </div>
  
</div>


<script>
  let extraBlanket = null;
  let extraDuvetCover = null;
  let extraPillowcaseSet = null;
  {% for collection in collections %}
  	{% if collection.id == 157696688189 %}{% comment %}All products{% endcomment %}
  		{% for product in collection.products %} 
  		  {% if product.id == 2163188596805 or product.id==2140387999813 %}{% comment %}Removable Cover | Cooling weighted blanket{% endcomment %}
  			  {%- assign variants_available = product.variants | where: "available", true -%}
          extraBlanket = {{ variants_available | json}};
        {% elsif product.id == 4502045294653 %}{% comment %}Luxury Pillowcase Set{% endcomment %}
  		    {%- assign variants_available = product.variants | where: "available", true -%}
          extraPillowcaseSet = {{ variants_available | json}};
        {% endif%}
  		{% endfor %}
    {% endif%}
  {% endfor %}
  {% for collection in collections %}
  	{% if collection.id == 271552708669 %}{% comment %}Duvet Comforter Throw{% endcomment %}
  		{% for product in collection.products %}
  		  
  		  {% if product.id == 6824646279229 %}{% comment %}Duvet Cover{% endcomment %}
  			  {%- assign variants_available = product.variants | where: "available", true -%}
              extraDuvetCover = {{ variants_available | json}};
          {% endif%}
  		
  		{% endfor %}
    {% endif%}
  {% endfor %}
              
  function setCustomOptions(classCusContainer, idSelect, callback){
    let cusContainer = document.querySelector(`.${ classCusContainer }`);
                
    let ogSelect = document.getElementById(idSelect)
    let cusSelected = document.createElement("div");
    cusSelected.setAttribute("class", "select-selected");
    cusSelected.innerHTML = ogSelect.options[ogSelect.selectedIndex].innerHTML;
    cusContainer.appendChild(cusSelected);
    let cusOptionsContainer = document.createElement("DIV");
    cusOptionsContainer.setAttribute("class", "select-items select-hide");

	for (let j = 1; j < ogSelect.length; j++) {
	  let cusOption = document.createElement("DIV");
	  cusOption.innerHTML = ogSelect.options[j].innerHTML;
	  if(ogSelect.options[j].dataset.aval === 'false') cusOption.classList.add("not-available");
	  if(j === 1) cusOption.classList.add("same-as-selected");

	  cusOption.addEventListener("click", function(e) {
        for (let i = 0; i < ogSelect.length; i++) {
          
          if (ogSelect.options[i].innerHTML == this.innerHTML) {
            ogSelect.selectedIndex = i;
            cusSelected.innerHTML = this.innerHTML;
            let cusOptionSelected = this.parentNode.getElementsByClassName("same-as-selected");
            for (let k = 0; k < cusOptionSelected.length; k++) {
              cusOptionSelected[k].removeAttribute("class");
            }
            this.setAttribute("class", "same-as-selected");
            if(callback) callback()
            break;
          }
        }
        cusSelected.click();
      });
      cusOptionsContainer.appendChild(cusOption);
    }
                
    cusContainer.appendChild(cusOptionsContainer);

	cusSelected.addEventListener("click", function(e) {
      e.stopPropagation();
      closeAllSelect(this);
      this.nextSibling.classList.toggle("select-hide");
      this.classList.toggle("select-arrow-active");
    });

	function closeAllSelect(elmnt) {
      let arrNo = [];
      let x = document.querySelectorAll(`.select-items`);
      let y = document.querySelectorAll(`.select-selected`);
      for (i = 0; i < y.length; i++) {
        if (elmnt == y[i]) {
          arrNo.push(i)
        } else {
          y[i].classList.remove("select-arrow-active");
        }
      }
      for (i = 0; i < x.length; i++) {
        if (arrNo.indexOf(i)) {
          x[i].classList.add("select-hide");
        }
      }
    }

	document.addEventListener("click", closeAllSelect);
  }
  
  let blanketUpsellContainer = document.getElementById('blanket-cover-upsell')

  blanketUpsellContainer.addEventListener('click', function(ev){
    let addButton = document.getElementById('blanket-cover-upsell-add');
    let checkBox = document.getElementById('blanket-cover-upsell-checkbox');
    let check = document.getElementById('blanket-cover-upsell-check');
    let edit = document.getElementById('blanket-cover-upsell-subtitle');
    
    if(!this.classList.contains('open') && ev.target !== addButton && this.dataset.checked === 'false'){
      this.classList.add('open')
      setTimeout(()=>{ this.style.overflow = 'visible';}, 300)
      
    } else if(ev.target === addButton && this.classList.contains('open')){
      this.style.overflow = 'hidden'
      this.classList.remove('open')
      
      boxAddedMessage()
      
      check.style.display = 'flex'
      
      this.dataset.checked = 'true'
      this.style.cursor = 'auto'
      
    } else if(this.dataset.checked === 'true'){
      this.classList.add('open')
      setTimeout(()=>{ this.style.overflow = 'visible';}, 300)
    
    } 
      
    if(ev.target === checkBox || ev.target === check) {
      if(this.dataset.checked === 'true') {
        this.dataset.checked = false
        boxDefaultMessage()
        check.style.display = 'none'
        this.style.cursor = 'pointer'

      } else {
        boxAddedMessage()
        check.style.display = 'flex'
        this.dataset.checked = true
      }
    } 
  })
  
  function boxAddedMessage() {
    setHtmlForId("blanket-cover-upsell-title", '{{ productAddedMessage }} - <span class="span-quicksand upsell-span-price">' + getPrice() + '</span>')
    setHtmlForId("blanket-cover-upsell-subtitle", 'Edit')
  }
  
  function boxDefaultMessage(){
  	setHtmlForId("blanket-cover-upsell-title", '{{ title }}')
    setHtmlForId("blanket-cover-upsell-subtitle", 'See Details')
  }
  
  function setHtmlForId(id, text) {
    let ele = document.getElementById(id);
    ele.innerHTML = text
  }
  
  function getPrice() {
    let ele = document.getElementById('blanket-cover-upsell-variant');
    return ele.selectedOptions[0].dataset.price
  }
  
  let currentSize = userSelection().Size
  function checkAvailabilityOfDuvet(s,f,c){
    size = s.toLowerCase()
    let bySize = ExtraCoverPicker.filterBySize(extraDuvetCover, size);
    
    let byFabricAndSize = bySize.filter(v => v.option1 === f)
    let colors = ["White", "Charcoal"]

    if (byFabricAndSize.length == 0){
      //don't hide anything because we want to show low opacity swatches
      document.querySelectorAll('label.swatch-unavailable').forEach(function(el){
        if (!colors.some(color => el.style['background-image'].includes(color))){
          $(el).parent().hide()
        } else {
          $(el).parent().show()
        }
      })
    } else {
      // Hide the swatches that are not available by color
      $('label.swatch-unavailable').parent().hide()
      $('.color-swatch:not(.swatch-unavailable)').parent().show()
    }
  }
  function checkAvailabilityOfBlankets(s, m){

    if(m.toLowerCase().includes('integrated') || m.toLowerCase().includes('cotton') || m.includes('One-Piece')){
      blanketUpsellContainer.style.display = 'none'
      blanketUpsellContainer.style.overflow = 'hidden'
      blanketUpsellContainer.classList.remove('open')
      blanketUpsellContainer.style.cursor = 'auto'
      
    } else {
      let size = s.toLowerCase();
      
      if(currentSize.toLowerCase() !== size){
        currentSize = size
        
        blanketUpsellContainer.dataset.checked = 'false'

        boxDefaultMessage()
		    let check = document.getElementById('blanket-cover-upsell-check');
        check.style.display = 'none'
        blanketUpsellContainer.style.cursor = 'pointer'
      
      }
      
      blanketUpsellContainer.style.display = 'block'
   
    {% comment %} ClimaSense Comforter {% endcomment %}
    {% if product.id == 6824157577277 %} 
       filteredVariant = ExtraCoverPicker.filterBySize(extraDuvetCover, size);
    
    {% comment %} Removable Cover Weighted Blanket {% endcomment %}
    {% elsif product.id == 1482350919749 %}
       filteredVariant = ExtraCoverPicker.filterBySize(extraBlanket, size);

    {% comment %} Weighted Blanket Page {% endcomment %}
    {% elsif product.id == 6890447896637 %}
        filteredVariant = ExtraCoverPicker.filterBySize(extraBlanket, size);
        console.log({filteredVariant, extraBlanket})
    {% comment %} Duvet Cover{% endcomment %}
    {% elsif product.id == 6824646279229 %}
       //filteredVariant = ExtraCoverPicker.filterBySize(extraPillowcaseSet, size);
      let colors = {{ product.variants | where: 'available' | map: 'option2' | uniq | json}}.map(str => str.toLowerCase())
      
       filteredVariant = extraPillowcaseSet.filter(value => colors.includes(value.option1.toLowerCase()))
   
    {% comment %} Cooling Weighted Blanket{% endcomment %}
    {% elsif product.id == 2140387999813 %}
       filteredVariant = ExtraCoverPicker.filterBySize(extraBlanket, size);
    {% endif %}

      let optionContainer = document.getElementById('blanket-cover-upsell-variant');

      if(filteredVariant.length > 0){
        optionContainer.innerHTML = ""
        
        let option = document.createElement('option')
        option.setAttribute('value', 0)
        option.disabled = true
        option.innerHTML = 'Select one:'
        optionContainer.appendChild(option)

        filteredVariant.forEach((v, i) => {
          let option = document.createElement('option')
          let price = theme.Currency.formatMoney(v.price, theme.settings.moneyFormat)
          option.setAttribute('value', v.id)
          option.setAttribute('data-img', v.featured_image.src)
          option.setAttribute('data-price', price)
          option.setAttribute('data-aval', v.available )
          option.innerHTML = setName(v.options) + ' <span class="span-quicksand" style="margin-left:4px;">| ' + price + '</span>'
          optionContainer.appendChild(option)
          
        })
        
        let customCont = document.querySelector('.select-selected')
        let customOpts = document.querySelector('.select-items')

        if(customCont) customCont.remove()
        if(customOpts) customOpts.remove()
        
        setImage()
        setCustomOptions("blanket-cover-upsell-custom-select-id", "blanket-cover-upsell-variant", setImage)
      }
      
    } 
  }
  
  function setImage(){
    let ele = document.getElementById('blanket-cover-upsell-variant');
    let optionImg = document.getElementById('blanket-cover-upsell-variant-img');

    optionImg.src = ele.selectedOptions[0].dataset.img
  }
  
  function setName(options){
    let [fabric, color] = options[0].split("|").map((n) => n.toUpperCase())
    let [size, measure] = options[1].split("|").map((n) => n.toUpperCase())

    {% if product.id == 6824157577277 %}//ClimsaSense Comforter
      color = options[1].toUpperCase()
      size = userSelection().Size
      let sizes = {"Full / Queen": "Q", "King / Cal King": "K"}
      size = sizes[size]
      fabric = options[0].toUpperCase()
    {% elsif product.id == 6824646279229 %}//  Duvet Cover 
      color = options[0].toUpperCase()
      size = options[1]
      let sizes = {"Full / Queen": "Q", "King": "K"}
      size = sizes[size]
      fabric = userSelection().Fabric
    {% else %} //Removable Cover Weighted Blanket if product.id == 1482350919749
      let sizes = {"8 LBS": "S", "15 LBS": "M", "18 LBS": "L", "30 LBS": "XL"}
      size = sizes[size.slice(0,-1)]
    {% endif %} 
    
    
    return [color, fabric, size].join(" | ") 
  }
  class ExtraCoverPicker {
    static filterBySize(variants, size) {
      return variants.filter(function(v){
        return v.options.join('').toLowerCase().includes(size)
      })
    }
  }
  
  function createCustomCartButton(){
    let custom = document.createElement('div');
    custom.setAttribute("class", "btn btn--full add-to-cart btn--upsell-extra justify-center")
    return custom;
  }
  
  function setCustomCartButtonFrom(originalButton){
    let custom = createCustomCartButton()
    
    custom.innerText = originalButton.innerText;
    
    let paymentsButtons = document.querySelector('.payment-buttons');

    document.querySelector(".product-single__form.product-form-flex").insertBefore(custom, originalButton); 
      
    originalButton.style.display = 'none';
    
    return custom;
  }

  function shouldDisplayUpsell(){
    let optionsSelected = userSelection()
    
  	checkAvailabilityOfBlankets(optionsSelected.Size, optionsSelected['Blanket Type'] || optionsSelected.Material || optionsSelected.Fabric || optionsSelected.Color);
    
  }
  
  document.querySelectorAll('.variant__button-label').forEach(el => el.addEventListener('click', () => setTimeout(shouldDisplayUpsell,100)))

  window.addEventListener('load', (event) => {
    shouldDisplayUpsell()
    let productForm = document.getElementById({{ id | json }});
    let addToCartButton = productForm.querySelector('.add-to-cart');
    
    let customCartButton = setCustomCartButtonFrom(addToCartButton)
    
    customCartButton.addEventListener('click', function(){

      if(blanketUpsellContainer.dataset.checked === 'true'){
        
        let idUpsell = document.getElementById('blanket-cover-upsell-variant').value;
//         let qtyUpsell = document.getElementById('blanket-cover-upsell-variant-quantity').value;
        let qtyUpsell = 1

        
        let formData = {'items': [{ 'id': idUpsell,'quantity': qtyUpsell }]};

        theme.cart.addItemFromForm(formData).then( r => { addToCartButton.click() })
        
      } else {
        addToCartButton.click()
      }
  	})
    //setCustomOptions("blanket-cover-upsell-custom-select-qty", "blanket-cover-upsell-variant-quantity")
    
  })
</script>

