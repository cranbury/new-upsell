{%- assign swatch_file_extension = 'png' -%}
{%- assign is_material = false -%}
{%- assign color_swatch_drop = option_drop -%}
{%- assign color_option_index = 0 -%}

{%- if settings.product_color_swatches -%}
  {%- for option in product.options_with_values -%}
    {%- if option == color_swatch_drop -%}
      {%- assign color_option_index = forloop.index0 -%}
      {%- assign downcased_option = color_swatch_drop.name | downcase -%}
      {%- if downcased_option contains 'material' -%}
        {%- assign is_material = true -%}
      {%- endif -%}
    {%- endif -%}
  {%- endfor -%}
{%- endif -%}

<div class="variant-wrapper variant-wrapper--{{ settings.variant_type }} js {% if option.name == 'Size' %}reorder-form-order{% endif %} {% if option.name == 'Color' and product.id == 6824157577277 %} shorter-wrapper{% endif %}">
        
    {%- for item in cart.items -%}
      <p class="{% if product.id == 4492419530813 %}{% comment %}LAYR Pillow{% endcomment %}no-margin{% endif %}">{{line_item.variant.compare_at_price | money}}</p>
      
    {%- endfor -%}
  <label id="variant__label__{{ option.name }}" class="variant__label-size-flex variant__label{% if option.name == 'Default' or option.name == 'Title' %} hidden-label{% endif %}{% unless settings.variant_labels_enable %} hidden-label{% endunless %}"
         for="ProductSelect-{{ section_id }}-option-{{ forloop.index0 }}">
    <div style="width:100%;">
      {{ option.name | append: ":" }}
      <span class="variant__label-info">
        {%- if is_material -%}
          <span
                class="variant__label-info-font"
                id="selected{{ option.name | replace: 'Size (UNISEX)', 'Unisex' | replace: ' ', '-'}}"
                data-option-index="{{ color_option_index }}">
            {{ option.selected_value }}
          </span>
        {%- elsif option.name == 'Fabric' and product.id == 6824646279229 -%}
          <span id="selected{{ option.name | replace: 'Size (UNISEX)', 'Unisex' | replace: ' ', '-' }}">
            {%- if option.selected_value == 'Cotton' -%}
              Cotton with 37.5 Technology
            {%- else -%}
              100% Viscose from Bamboo
            {%- endif -%}
          </span>
       {%- elsif option.name == 'Size' and product.id == 6789635113021 -%}
          <span id="selectedSize">
            {%- if option.selected_value == 'Individual' -%}
              50"X70"
            {%- else -%}
              75"X100"
            {%- endif -%}
          </span>
        {%- else -%}
          <span id="selected{{ option.name | replace: 'Size (UNISEX)', 'Size-Unisex' | replace: ' ', '-' }}">
            {{ option.selected_value }}
          </span>
        {%- endif -%}
      </span>
    </div>
    
    

    {% if option.name == 'Size' and product.handle contains "blanket" and product.id != 6586143539261 %}
      <div style="width:33%;text-align:right;">
        <!-- Trigger/Open The Size Guide Modal - modal-size-guide snippet -->
        <a id="size-guide-modal-link" class="size-guide-link" href="#">Size Guide</a>
        {%- include 'modal-size-guide', modalId: "size-guide-modal-link" -%}
      </div>
    {%- endif -%}   
    {% if option.name == 'Size (UNISEX)' %}
      <div style="width:33%;text-align:right;">
        <!-- Trigger/Open The Size Guide Modal - modal-size-guide snippet -->
        <a  class="size-guide-link link-to-size-chart">Size Chart</a>
        {%- include 'modal-size-guide', modalId: "size-guide-modal-link" -%}
      </div>
    {%- endif -%} 
   
    
  </label>
  {%- assign option_index = forloop.index -%}
  
  {%- assign variants_available = product.variants | where: "available", true -%}
  
  {%- assign robe_s = variants_available | where: "option2", 'Small' -%}
  {%- assign robe_m = variants_available | where: "option2", 'Medium' -%}
  {%- assign robe_l = variants_available | where: "option2", 'Large' -%}
  {%- assign robe_xl = variants_available | where: "option2", 'Extra Large' -%}
   
  {%- assign robe_char = variants_available | where: "option1", 'Charcoal' -%}
  {%- assign robe_grey = variants_available | where: "option1", 'Grey' -%}
  {%- assign robe_blush = variants_available | where: "option1", 'Blush' -%}

  {%- assign variants_s = variants_available | where: "option2", '8 lbs | 42"x56"' -%}
  {%- assign variants_m = variants_available | where: "option2", '15 lbs | 54"x72"' -%}
  {%- assign variants_l = variants_available | where: "option2", '18 lbs | 60"x80"' -%}
  {%- assign variants_xl = variants_available | where: "option2", '30 lbs | 100"x85"' -%}
  {%- assign variants_6pc = variants_available | where: "option2", '6 Piece Set (2 bath | 2 hand | 2 wash)' -%}
  {%- assign variants_2bt = variants_available | where: "option2", '2 Bath Towels' -%}
  {%- assign variants_2bs = variants_available | where: "option2", '2 Bath Sheets - 50% Larger!' -%}
  
  {%- assign multi_row = "" -%}
  {% if option.values.size > 4 or product.id == 6727710900285 %}
  	{%- assign multi_row = "variant-input-wrap-multi-row" -%}
  {% endif %}
  
  <div class="variant-input-wrap {{ option.name | replace: 'Size (UNISEX)', 'Unisex' }} {{ multi_row }}{% if option.name == 'Size' and product.id == 4405624864829 %} luxury-sheet-variant-size{% endif %}"
    name="{{ option.name }}"
    data-index="option{{ option_index }}"
    id="ProductSelect-{{ section_id }}-option-{{ forloop.index0 }}">
    
    {%- for value in option.values -%}
      {%- assign product_available = true -%}
      {%- if product.options.size == 1 -%}
        {%- assign product_available = product.variants[forloop.index0].available -%}
      {%- endif -%}
   
    
      <div
        class="upsell-grid-materials variant-input {% if option.name == 'Pack Size' %} variant-input-pack-size{% endif %}"
        data-index="option{{ option_index }}"
        data-value="{{ value | escape }}">
        <input type="radio"
          {% if option.name == "Size" %}
               {% if option.selected_value == value %} 
               		checked="checked" 
               {% endif %}
               {% comment %} {% if value == '15 lbs | 54"x72"' or value == 'Queen' %} checked="checked"{% endif %}{% endcomment %}
               
          {% elsif option.selected_value == value %} 
               checked="checked"
          {% endif %}
          value="{{ value | escape }}"
          data-index="option{{ option_index }}"
          name="{{ option.name }}[]"
          class="variant__input-{{ section_id }}{% unless product_available %} disabled{% endunless %}{% if is_material %} variant__input--color-swatch-{{ section_id }}{% endif %}"
          {% if is_material %} data-color-name="{{ value | escape }}"{% endif %}
          {% if is_material %} data-color-index="{{ color_option_index }}"{% endif %}
          id="ProductSelect-{{ section_id }}-option-{{ option.name | handleize }}-{{ value | url_encode }}">
          {%- if is_material or option.name != 'Size (UNISEX)' and product.id == 6727710900285 -%}
            {%- assign color_image = value | handle | append: '.' | append: swatch_file_extension | asset_img_url: '50x' | prepend: 'https:' | split: '?' | first -%}
            {%- assign color_swatch_fallback = value | split: ' ' | last | handle -%}
        
            {% assign pictures = product.variants | where: "option1", value %} 
          {% assign pictures = product.variants | where: "option1", value %} 
            {% assign pictures = product.variants | where: "option1", value %} 
            {% assign color_picture = '' %}

          {% if product.id == 1482400661573 or product.id == 1482350919749 or product.id == 2140387999813 or product.id == 2163188596805 %} {% comment %} Integrated WB, Removable cover WB, Cooling WB, Removable Covers {% endcomment %}

          	{% assign color_picture = pictures[0].featured_image | remove: "products/" | replace: '.png', 'LUX.png' | asset_url %} 

          {% elsif product.id == 6586143539261 %} {% comment %} Lightweight blanket {% endcomment %}

          	{% assign color_picture = pictures[0].featured_image | remove: "products/" | downcase | replace: '.png', 'BB.png' | asset_url %} 
        
          {% elsif product.id == 6727710900285 %} {% comment %} Ultra Plush Robe {% endcomment %}
      
          	{% assign color_picture = pictures[0].featured_image | remove: "products/" | downcase | replace: 'upr.png', 'UPR-sm.png' | asset_url %}
          
          {% else %}

          	{% assign color_picture = pictures[0].featured_image | img_url %} 

          {% endif %}
        
        	 {% if product.id == 6727710900285 %} {% comment %} robe {% endcomment %}
        		{%- assign variants_s = robe_s -%}
                {%- assign variants_m = robe_m -%}
                {%- assign variants_l = robe_l -%}
                {%- assign variants_xl = robe_xl -%}
        	{% endif %}

          <label
              onclick="clickOption(this.control.value, '{{ option.name }}')"
              onmouseover="showVariantAvailable(this.control.value, '{{ option.name }}')"
              onmouseout="showCurrentVariantAvailable()"
              for="ProductSelect-{{ section_id }}-option-{{ option.name | handleize }}-{{ value | url_encode }}"
              {%- assign color_available_s = variants_s | where: "option1", value -%}
              {%- assign color_available_m = variants_m | where: "option1", value -%}
              {%- assign color_available_l = variants_l | where: "option1", value -%}
              {%- assign color_available_xl = variants_xl | where: "option1", value -%}
              data-available="none{% if color_available_s.size > 0 %}, s{% endif %}{% if color_available_m.size > 0 %}, m{% endif %}{% if color_available_l.size > 0 %}, l{% endif %}{% if color_available_xl.size > 0 %}, xl{% endif %}"
              class="variant__button-label color-swatch color-swatch--{{ value | handle }}{% unless product_available %} disabled{% endunless %}{% unless color_available_m.size > 0 %} swatch-unavailable{% endunless %}"
              style="background-image: url('{{ color_picture }}');{% if product.id == 1482400661573 or product.id == 1482350919749 or product.id == 2140387999813 %}background-size: cover;{% endif %}"
              data-type="{{ option.name }}-option"
            >
          </label>
        {%- elsif option.name == 'Color' and product.id == 6824157577277 -%}
          {% comment %} climasense conforter {% endcomment %}
          <label
              onclick="clickOption(this.control.value, '{{ option.name }}')"
              onmouseover="showVariantAvailable(this.control.value, '{{ option.name }}')"
              onmouseout="showCurrentVariantAvailable()"
              for="ProductSelect-{{ section_id }}-option-{{ option.name | handleize }}-{{ value | url_encode }}"
              data-available="none{% if color_available_s.size > 0 %}, s{% endif %}{% if color_available_m.size > 0 %}, m{% endif %}{% if color_available_l.size > 0 %}, l{% endif %}{% if color_available_xl.size > 0 %}, xl{% endif %}"
              class="variant__button-label color-swatch color-swatch--{{ value | handle }}{% unless product_available %} disabled{% endunless %}{% unless color_available_m.size > 0 %} swatch-unavailable{% endunless %}"
              style="display:none; background-image: url('{{ color_picture }}');"
              data-type="{{ option.name }}-option"
            >
          </label>
        {%- elsif option.name != 'Size' and product.id == 6789635113021 -%} 
          {% comment %} throw blanket {% endcomment %}
          {%- assign color_image = value | handle | append: '.' | append: swatch_file_extension | asset_img_url: '50x' | prepend: 'https:' | split: '?' | first -%}
          {%- assign color_swatch_fallback = value | split: ' ' | last | handle -%}
          {% assign pictures = product.variants | where: "option1", value %} 
          {% assign color_picture = pictures[0].featured_image | remove: "products/" | downcase | replace: 'upt.png', 'UPT.png' | asset_url %}
        
          <label
              onclick="clickOption(this.control.value, '{{ option.name }}')"
              onmouseover="showVariantAvailable(this.control.value, '{{ option.name }}')"
              onmouseout="showCurrentVariantAvailable()"
              for="ProductSelect-{{ section_id }}-option-{{ option.name | handleize }}-{{ value | url_encode }}"
              {%- assign color_available_s = variants_s | where: "option1", value -%}
              {%- assign color_available_m = variants_m | where: "option1", value -%}
              {%- assign color_available_l = variants_l | where: "option1", value -%}
              {%- assign color_available_xl = variants_xl | where: "option1", value -%}
              data-available="none{% if color_available_s.size > 0 %}, s{% endif %}{% if color_available_m.size > 0 %}, m{% endif %}{% if color_available_l.size > 0 %}, l{% endif %}{% if color_available_xl.size > 0 %}, xl{% endif %}"
              class="variant__button-label color-swatch color-swatch--{{ value | handle }}{% unless product_available %} disabled{% endunless %}{% unless color_available_m.size > 0 %} swatch-unavailable{% endunless %}"
              style="background-image: url('{{ color_picture }}');{% if product.id == 1482400661573 or product.id == 1482350919749 or product.id == 2140387999813 %}background-size: cover;{% endif %}"
              data-type="{{ option.name }}-option"
            >
          </label>
        {%- elsif option.name == "Amount" -%}
          
          <label
            for="ProductSelect-{{ section_id }}-option-{{ option.name | handleize }}-{{ value | url_encode }}"
            class="variant__button-label {{ option.name | handleize }}-variant"
			      onmouseover="updateAmount(this.control.value)"
            onmouseout="selectedAmount()"
		        data-type="{{ option.name }}-option"
          >
            {{ value | remove: '.00' }}
          </label>
        
        {%- elsif is_color and option.name != 'Size (UNISEX)' -%}{% comment %} Robe {% endcomment %}
          {%- assign color_image = value | handle | append: '.' | append: swatch_file_extension | asset_img_url: '50x' | prepend: 'https:' | split: '?' | first -%}
          {%- assign color_swatch_fallback = value | split: ' ' | last | handle -%}
        
          {% assign pictures = product.variants | where: "option1", value %} 
          {% assign signStr = pictures[0].featured_image.src %}
		  
          <label
              onclick="clickOption(this.control.value, '{{ option.name }}')"
              onmouseover="showVariantAvailable(this.control.value, '{{ option.name }}')"
              onmouseout="showCurrentVariantAvailable()"
              for="ProductSelect-{{ section_id }}-option-{{ option.name | handleize }}-{{ value | url_encode }}"
              {%- assign color_available_s = variants_s | where: "option1", value -%}
              {%- assign color_available_m = variants_m | where: "option1", value -%}
              {%- assign color_available_l = variants_l | where: "option1", value -%}
              {%- assign color_available_xl = variants_xl | where: "option1", value -%}
              data-available="none{% if color_available_s.size > 0 %}, s{% endif %}{% if color_available_m.size > 0 %}, m{% endif %}{% if color_available_l.size > 0 %}, l{% endif %}{% if color_available_xl.size > 0 %}, xl{% endif %}"
              class="variant__button-label color-swatch color-swatch--{{ value | handle }}{% unless product_available %} disabled{% endunless %}{% unless color_available_m.size > 0 %} swatch-unavailable{% endunless %}"
              style="background-image: url('//cdn.shopify.com/s/files/1/0026/5178/3237/{{ signStr | replace: '.png', '_75x.png' | replace: '.jpg', '_75x.jpg' }}');"
              data-type="{{ option.name }}-option"
            >
          </label>
        
        {%- else -%}
          <label
            {% if variants_m.size > 0 %}{%- assign color_available = variants_m[0].option2 -%}{% endif %}
            data-color-selected="{{color_available}}"
                 
            {% if option.name == 'Size' or option.name == 'Size (UNISEX)' %}
              onclick="clickOption(this.control.value, '{{ option.name }}')"
              onmouseover="showVariantAvailable(this.control.value, '{{ option.name }}')"
			        onmouseout="showCurrentVariantAvailable()"
              data-type="{{ option.name }}-option"
                 style
            {% endif %}
            for="ProductSelect-{{ section_id }}-option-{{ option.name | handleize }}-{{ value | url_encode }}"
            class="variant__button-label{% unless product_available %} disabled{% endunless %}{% if product.id == 4492419530813 %} variant__button-label-pack-size {% endif %}
                   
            {% if option.name == 'Size' %} 
              {% case value %}
                {% when '8 lbs | 42"x56"'%}
                  {% comment %} is closing the class variant__button-label {% endcomment %}
                  {% unless variants_s.size > 0 %} button-unavailable{% endunless %}"
                  data-option="s">
                  <span>S</span><br><span class="size-span-weight">8lbs</span>
                {% when '6 Piece Set (2 bath | 2 hand | 2 wash)'%}
                  {% comment %} is closing the class variant__button-label {% endcomment %}
                  {% unless variants_6pc.size > 0 %} button-unavailable{% endunless %}"
                  data-option="s">
                  <span>6 Piece Set</span>
                {% when '2 Bath Sheets - 50% Larger!'%}
                  {% comment %} is closing the class variant__button-label {% endcomment %}
                  {% unless variants_2bs.size > 0 %} button-unavailable{% endunless %}"
                  data-option="s">
                  <span>2 Bath Sheets</span>
                {% when '15 lbs | 54"x72"' %}
                  {% comment %} is closing the class variant__button-label {% endcomment %}
                  {% unless variants_m.size > 0 %} button-unavailable{% endunless %}"
                  data-option="m">
            	  <span>M</span><br><span class="size-span-weight">15lbs</span>
                {% when '18 lbs | 60"x80"' %}
            	  {% comment %} is closing the class variant__button-label {% endcomment %}
                  {% unless variants_l.size > 0 %} button-unavailable{% endunless %}"
            	  data-option="l">
            	  <span>L</span><br><span class="size-span-weight">18lbs</span>
                {% when '30 lbs | 100"x85"' %}
            	  {% comment %} is closing the class variant__button-label {% endcomment %}
                  {% unless variants_xl.size > 0 %} button-unavailable{% endunless %}"
            	  data-option="xl">
            	  <span>XL</span><br><span  class="size-span-weight">30lbs</span>
                 {% else %}
            		"> {{value}}
              {% endcase %}
            
			{% elsif option.name == 'Size (UNISEX)' %}
            
              {%- assign robe_s_color = robe_s | where: "option1", 'Small' -%}
              {%- assign robe_m = variants_available | where: "option2", 'Medium' -%}
              {%- assign robe_l = variants_available | where: "option2", 'Large' -%}
              {%- assign robe_xl = variants_available | where: "option2", 'Extra Large' -%}
				{% case value %}
                  {% when 'Small'%}
                    {% comment %} is closing the class variant__button-label {% endcomment %}
                    {% unless robe_s.size > 0 %} button-unavailable{% endunless %}"
                    data-option="s">
                    <span>S</span>
                  {% when 'Medium'%}
                    {% comment %} is closing the class variant__button-label {% endcomment %}
                    {% unless robe_m.size > 0 %} button-unavailable{% endunless %}"
                    data-option="s">
                    <span>M</span>
                  {% when 'Large'%}
                    {% comment %} is closing the class variant__button-label {% endcomment %}
                    {% unless robe_l.size > 0 %} button-unavailable{% endunless %}"
                    data-option="s">
                    <span>L</span>
                  {% when 'Extra Large' %}
                    {% comment %} is closing the class variant__button-label {% endcomment %}
                    {% unless robe_xl.size > 0 %} button-unavailable{% endunless %}"
                    data-option="m">
                    <span>XL</span>
                  
                   {% else %}
                      "> {{value}}
              	{% endcase %}
     
            {% elsif option.name == 'Color' %}
              
              {% assign product_tag = '_120x.png' %}
            
              {% assign color_swatch = value %}
              
           	  {% if product.id == 4405624864829 %} {% comment %} Premium Bamboo Sheets {% endcomment %}
            
            	{% assign product_tag = 'PBS_70x.png' %}
            	{% assign color_swatch = value %}
            
              {% elsif product.id == 6586143539261 %} {% comment %} Lightweight blanket {% endcomment %}

              	{% assign product_tag = 'BB_70x.png' %} 
           	    {% assign color_swatch = value | downcase %}
              
              {% endif %}
            
              
              color-swatch color-swatch-square"
              onclick="clickOption(this.control.value, '{{ option.name }}')"
              onmouseover="showVariantAvailable(this.control.value, '{{ option.name }}')"
			        onmouseout="showCurrentVariantAvailable()"
              data-type="{{ option.name }}-option"
              style="background-image: url('{{ color_swatch | replace: ' ', '-' | append: product_tag | asset_url }}');height:unset;
            
            		 {% if product.id == 4405624864829 and option.values.size > 5 %}
                 {% comment %} luxury sheet set {% endcomment %}
            			background-size: cover;
            			background-color: #fff;
            			width: 100%;
            		 {% endif %}">
            
            {% elsif option.name == 'Pack Size' %}
			  "{% comment %}is closing the class variant__button-label {% endcomment %}
              data-available="none{% if fabric_available_s.size > 0 %}, s{% endif %}{% if fabric_available_m.size > 0 %}, m{% endif %}{% if fabric_available_l.size > 0 %}, l{% endif %}{% if fabric_available_xl.size > 0 %}, xl{% endif %}"
              data-type="{{ option.name }}-option"
              onclick="clickOption(this.control.value, '{{ option.name | replace: ' ', '-' }}')"
              onmouseover="showVariantAvailable(this.control.value, '{{ option.name | replace: ' ', '-' }}')"
              onmouseout="showCurrentVariantAvailable()">

              {% if value contains '+'%}
                {% assign words = value | split: '+' %}
                  <span class="fabric-name">{{ words.first | escape }}</span>
                  <span class="fabric-name">{{ words.last | prepend: '+' | escape}}</span>
                {% else %}
                	<span class="fabric-name">{{ value | escape}}</span>
              {% endif %}
            
            {% else %}
              {% comment %} "> is closing the class variant__button-label {% endcomment %}
              {%- assign fabric_available_s = variants_s | where: "option3", value -%}
              {%- assign fabric_available_m = variants_m | where: "option3", value -%}
              {%- assign fabric_available_l = variants_l | where: "option3", value -%}
              {%- assign fabric_available_xl = variants_xl | where: "option3", value -%}

              "
              data-available="none{% if fabric_available_s.size > 0 %}, s{% endif %}{% if fabric_available_m.size > 0 %}, m{% endif %}{% if fabric_available_l.size > 0 %}, l{% endif %}{% if fabric_available_xl.size > 0 %}, xl{% endif %}"
              data-type="{{ option.name }}-option"
              onclick="clickOption(this.control.value, '{{ option.name | replace: ' ', '-' }}')"
              onmouseover="showVariantAvailable(this.control.value, '{{ option.name | replace: ' ', '-' }}')"
              onmouseout="showCurrentVariantAvailable()">
              
              {% if value contains '+'%}
            	{% assign words = value | split: '+' %}
            	  <span class="fabric-name">{{ words.first | escape }}</span>
                  <span class="fabric-name">{{ words.last | prepend: '+' | escape}}</span>
			  {% else %}
            	<span class="fabric-name">{{ value | escape}}</span>
              {% endif %}
            {% endif %}
        </label>
        <script>
          {% if option.selected_value == value %} 
            setTimeout(() => clickOption('{{ value }}', '{{ option.name }}'), 1000)
          {% endif %}
        </script>
        {%- endif -%}
        {% if option.name == 'Size' %}
        {% unless product.id == 6669003915325 or product.id == 6640736469053 %}
        <p class="size-desc">
          {% case value %}
          {% when '8lb | 42"x56"' %}
            42"x56"
          {% when '15lb | 54"x72"' %}
            54"x72"
          {% when '18lb | 60"x80"' %}
            60"x80"
          {% when '30lb | 100"x85"' %}
            100"x85"
          {% endcase %}
        </p>
        {% endunless %}
        {%- endif -%}
        
        {% if option.name == 'Fabric' %}	
        <p class="fabric-desc">
          {% case value %}
          {% when 'Bamboo + Minky' %}
          Cool &amp; Cozy
          {% when 'Bamboo' %}
          Cool &amp; Silky
          {% when 'Minky' %}
          Cozy &amp; Plush
          {% endcase %}
        </p>
        {% endif %}
        
        {% if option.name == 'Pack Size' and forloop.last == true %}	
        
          <span id="pack-50-off" class="layr-pillow-2-pack">
            50% OFF 2ND PILLOW
          </span>
        
        {% endif %}

        {% comment %} Ultra Plush Throw {% endcomment %}
        {% if product.id == 6789635113021 %}
          {% if option.name == 'Size' and forloop.last == true %}	
            <span id="pack-50-off" class="ultra-plush-neg-margin">
              OVER 2X BIGGER!
            </span>
            <script>
              $('.variant__button-label').last().hover(function(){
                $('#pack-50-off').css({color: 'white'})
              })
              $('.variant__button-label').last().mouseout(function(){
                $('#pack-50-off').css({color: 'gray'})
              })
            </script>
          {% endif %}
        {% endif %}

        {% if product.id == 6669003915325 or product.id == 6640736469053  %}
          {% if option.name == 'Size' and forloop.last == true %}
            <span id="pack-50-off">
              50% LARGER!
            </span>
            <script>
              $('.variant__button-label').last().hover(function(){
                $('#pack-50-off').css({color: 'white'})
              })
              $('.variant__button-label').last().mouseout(function(){
                $('#pack-50-off').css({color: 'gray'})
              })
            </script>      
          {% endif %}
        {% endif %}
      </div>
    
    {%- endfor -%}
  </div>
</div>

  {% if product.id == 4492419530813 %} {% comment %} LAYR Pillow {% endcomment %}
<!--     <label id="variant__label__Quantity" class="variant__label-size-flex variant__label"
           for="ProductSelect-{{ section_id }}-option-quantity">
      <div>
        Quantity:

        <span class="variant__label-info">
          <span id="selectedQuantity">
            1
          </span>
        </span>
      </div>
    </label>

    <div class="variant-input-wrap Quantity qty-buttons"
         id="ProductSelect-{{ section_id }}-option-quantity">

      {%- assign amounts = "1, 2, 3, 4" | split: ", "  -%}

      {%- for amount in amounts -%}
      <div
           class="variant-input"
           data-value="{{ amount | escape }}">

        <button class="variant__button-label {% if amount == '1'%}active{% endif %}" value="{{ amount }}" onclick="clickQty({{ amount }}); return false;">{{ amount }}</button>

      </div>

      {%- endfor -%}

    </div> -->
  {% endif %}

<script>

  	var _opts = {{product.options | json}};
    
    var ppp = {{ product | json}}
    
    var allVariants = {{ product.variants | json }}
    var smallNeverInStock = allVariants.filter(v => v.sku.slice(0, 3) === '222').map(v => v.option1)
    var xLargeNeverInStock = allVariants.filter(v => v.sku.slice(0, 3) === '188').map(v => v.option1)
    var variantsAvailable = {{ variants_available | json }}
    var pictures = {{ product.media | json}}
      
    var cartEx = {{cart | json}}

    function updateCarousel(clickedOption, option){
      if({{ product.id | json }} === 4492419530813 || {{ product.id | json }} === 4813098811453) return; //LAYR Pillow OR Gift Card Image
         
      let oOp = _opts.filter(op => op !== option)[0]
      if(_opts.length === 1) oOp = "Size"
      //if(_opts.length === 3 && option == 'Size') oOp = "Color"

      
      let labels = {[_opts[0]]: 'option1', [_opts[1]]: 'option2', [_opts[2]]: 'option3'};
      const mainSlides = [...document.querySelector('.main-carousel').children];
      const thumbSlides = [...document.querySelectorAll('.product__thumb')];

      thumbSlides.forEach(slide => slide.parentNode.parentNode.style.display = 'none');
      
      const variants = window.ourProduct.variants;
      let url = null;
      let filteredVariants = variants
      
      if(_opts.length === 3 ){
         filteredVariants = filteredVariants.filter(variant => variant.title.includes(option == 'Fabric' ? clickedOption : userSelection()['Fabric']) && variant.hasOwnProperty('featured_media'))

          filteredVariants = filteredVariants.filter(variant => variant.title.includes(option == 'Color' ? clickedOption : userSelection()['Color']) && variant.hasOwnProperty('featured_media'))

          filteredVariants = filteredVariants.filter(variant => variant.title.includes(option == 'Size' ? clickedOption : userSelection()['Size']) && variant.hasOwnProperty('featured_media'))
     
      } else {
        filteredVariants = variants.filter(variant => variant[labels[oOp]] === userSelection()[oOp] && variant[labels[option]] === clickedOption && variant.hasOwnProperty('featured_media'));
      }
      if(filteredVariants.length > 0){ 
        url = filteredVariants[0].featured_media.preview_image.src.split('.png')[0].split('products/')[1]
      } else {
        url = variants[0].featured_media.preview_image.src.split('.png')[0].split('products/')[1]
      }
      
      let first = true;
      let newMainIdx = 0;
      
      let labelImg = url.split('_')[0]
      let slidesFiltered = thumbSlides.filter(slide => {
        
       	let slideHREF = slide.href.split('.png')[0].split('products/')[1]
        let slideHREFNoSize = slideHREF.split('_')[0]

        if ( ( slideHREFNoSize.split('_')[0].includes(labelImg) && slideHREFNoSize.split('_')[0] !== labelImg ) || slideHREF.includes(url) ){
          slide.parentNode.parentNode.style.display = 'block';
          if(first){
//             thumbFocus(slide)
            slide.click();
            first = false;
            newMainIdx = slide.parentNode.parentNode.dataset.index
          }
        }
      });
     
     
      mainSlides.forEach(slide => {
      	slide.style.display = 'none';
        let img = slide.firstElementChild.firstElementChild.firstElementChild;
        img.style.opacity = 0;
        img.classList.remove('lazyautosizes')
        img.classList.remove('lazyloaded')
        if(slide.dataset.index === newMainIdx){
       	  slide.style.display = 'block';
          img.style.opacity = 1;
          img.classList.add('lazyautosizes')
          img.classList.add('lazyloaded')
        }
      })
    }
  
    function dotCarousel(clickedOption, option){
      if({{ product.id | json }} === 4492419530813 || {{ product.id | json }} === 4813098811453) return; //LAYR Pillow OR Gift Card Image
      // have to do same fix as update carousel maybe
      let oOp = _opts.filter(op => op !== option)[0]
      if(_opts.length === 1) oOp = "Size"
      if(_opts.length === 3 && option == 'Size') oOp = "Color"

      let labels = {[_opts[0]]: 'option1', [_opts[1]]: 'option2', [_opts[2]]: 'option3'};
      const mainSlides = [...document.querySelector('.main-carousel').children];
      const dotSlides = [...document.querySelectorAll('.dot-carousel')];
      
      dotSlides.forEach(dot => dot.style.display = 'none');
      
      const variants = window.ourProduct.variants;
      filteredVariants = variants
      let url = null;
      
      if(_opts.length === 3 ){
        filteredVariants = filteredVariants.filter(variant => variant.title.includes(option == 'Fabric' ? clickedOption : userSelection()['Fabric']) && variant.hasOwnProperty('featured_media'))

        filteredVariants = filteredVariants.filter(variant => variant.title.includes(option == 'Color' ? clickedOption : userSelection()['Color']) && variant.hasOwnProperty('featured_media'))

        filteredVariants = filteredVariants.filter(variant => variant.title.includes(option == 'Size' ? clickedOption : userSelection()['Size']) && variant.hasOwnProperty('featured_media'))
     
      } else {
        filteredVariants = variants.filter(variant => variant[labels[oOp]] === userSelection()[oOp] && variant[labels[option]] === clickedOption && variant.hasOwnProperty('featured_media'));
      }
      if(filteredVariants.length > 0){ 
        url = filteredVariants[0].featured_media.preview_image.src.split('.png')[0].split('products/')[1]
      } else {
        url = variants[0].featured_media.preview_image.src.split('.png')[0].split('products/')[1]
      }

      let first = true;
      let newMainIdx = 0; 
      
      let labelImg = url.split('_')[0]
      let slidesFiltered = dotSlides.filter(dot => {
        
        let slideHREF = dot.dataset.img.split('.png')[0].split('products/')[1]
        let slideHREFNoSize = slideHREF.split('_')[0]
        
        if( ( slideHREFNoSize.split('_')[0].includes(labelImg) && slideHREFNoSize.split('_')[0] !== labelImg ) || slideHREF.includes(url) ){
          dot.style.display = 'block';
          if(first){
            dot.click();
            dot.classList.add('dot-picked');
            first = false;
            newMainIdx = dot.dataset.index
          }
          return true;
        }
      });
	
      if (slidesFiltered.length === 1) {
        slidesFiltered[0].style.visibility = "hidden"
      }
      
      mainSlides.forEach(slide => {
      	slide.style.display = 'none';
        let img = slide.firstElementChild.firstElementChild.firstElementChild;
        img.style.opacity = 0;
        img.classList.remove('lazyautosizes')
        img.classList.remove('lazyloaded')
        if(slide.dataset.index === newMainIdx){
       	  slide.style.display = 'block';
          img.style.opacity = 1;
          img.classList.add('lazyautosizes')
          img.classList.add('lazyloaded')
        }
      
      })
    }

    //to know the options selected in a moment for each category
    function userSelection(){
      let options = _opts;
      let userSelection = {};
      options.forEach(function(option) {
        let elements = document.querySelectorAll('label[data-type="'+option+'-option"]');
        let selected = [...elements].filter(element => element.control.checked);
        userSelection[option] = selected.length > 0 ? selected[0].control.value : 'none';
      })
      return userSelection;
    }

    //to unselect and option
    function unSelectOptionsFor(option){
      let options = document.querySelectorAll('label[data-type="'+option+'-option"]');
      options.forEach(option => option.control.checked = false);
    }

    //to select an option in a category
    function selectOptionsFor(option, value){
      let options = document.querySelectorAll('label[data-type="'+option+'-option"]');
      let selectedLabel = null;
      unSelectOptionsFor(option);
      options.forEach(function(label) {
        if(label.control.value === value){
          selectedLabel = label;
          selectedLabel.control.click();
        } 
      });
      return selectedLabel
    }

  	function availablesWithOption(op1){
      return variantsAvailable.filter(variant => variant.options.includes(op1));
    }

    function getOptionsFor(type){
      return [...document.querySelectorAll(`label[data-type="${type}-option"]`)];
    }

    function allUnAvailableFor(options){
      let klass = options[0].style.backgroundImage === '' ? 'button-unavailable' : 'swatch-unavailable'
      options.forEach(label => {
        label.classList.add(klass);
        label.control.classList.add(klass)
      });
    }

    function showAvailableFor(variants, options, type){
      let labels = {[_opts[0]]: 'option1', [_opts[1]]: 'option2', [_opts[2]]: 'option3'};
      let klass = options[0].style.backgroundImage === '' ? 'button-unavailable' : 'swatch-unavailable'
      
      variants.forEach(function(variant, idx){
        let option = options.filter(label => label.control.value === variant[labels[type]]);
        option[0].classList.remove(klass);
        option[0].control.classList.remove(klass);
      })
    }

    function varianstAvailable(variants, category){
      let optionSelected = userSelection()[category];
      let filtered = variants.filter(variant => variant.options.includes(optionSelected));
      if(filtered.length > 0){
        return filtered[0];
      } else {
        return variants[0];
      }
    }
    
    // Initialize text for size label
    document.addEventListener("DOMContentLoaded", function(){
      if(document.getElementById("selectedSize") && document.querySelector('.Size input:checked' && {{product.id}} != 6789635113021)){
        document.getElementById("selectedSize").innerHTML = document.querySelector('.Size input:checked').value
      }
    })
    document.addEventListener("DOMContentLoaded", function(){
      if(document.getElementById("selectedUnisex") && document.querySelector('.Unisex input:checked')){
        document.getElementById("selectedUnisex").innerHTML = document.querySelector('.Unisex input:checked').value
      }
    })
    
    //show available variant image on hover
    function showVariantAvailable(value, type) {//se queda
	    const mainSlides = [...document.querySelector('.main-carousel').children];
      let labels = {[_opts[0]]: 'option1', [_opts[1]]: 'option2', [_opts[2]]: 'option3'}
//       let variants = variantsAvailable.filter(variant => variant[labels[type]] === value)
      let variants = allVariants.filter(variant => variant[labels[type]] === value)
      let firstOptions = variants.filter(variant => variant.option1 === userSelection()[_opts[0]]);
      let secondOptions = variants.filter(variant => variant.option2 === userSelection()[_opts[1]]);
      let thirdOptions = variants.filter(variant => variant.option3 === userSelection()[_opts[2]]);
      if (value === '2-Pack'){
          $('#pack-50-off').css({color: 'white'})
      }
      if(variants.length > 0){
        let first = variants[0].option1;
        let second = variants[0].option2;
        let third = variants[0].option3;

        firstOptions.length > 0 ? first = firstOptions[0].option1 : null
        secondOptions.length > 0 ? second = secondOptions[0].option2 : null
        thirdOptions.length > 0 ? third = thirdOptions[0].option3 : null

        let imgAvailable = imageAvailable(first,second);

        let firstLabel = document.querySelector('#selected'+_opts[0].replaceAll(' ', '-'));
        if ({{product.id}} == 6824646279229 && first == 'Cotton'){
          firstLabel.innerHTML = 'Cotton with 37.5 Technology'
        } else if ({{product.id}} == 6824646279229 && first == 'Bamboo Viscose'){
          firstLabel.innerHTML = '100% Viscose from Bamboo'
        } else {
          firstLabel.innerHTML = first;
        }

        let arr2 = _opts[1].replaceAll(' ', '-').replaceAll('(', '').replaceAll(')', '').split('-')

        function capitalizeFirstLetter(string) {
          return string.charAt(0).toUpperCase() + string.slice(1);
        }

        let id2 = arr2.map(str => capitalizeFirstLetter(str.toLowerCase())).join('-')
        let secondLabel = document.querySelector('#selected'+id2);
        
        //throw page
        if ({{product.id}} == 6789635113021 && second == 'Individual'){
          secondLabel.innerHTML = '50"X70"'
        } else if ({{product.id}} == 6789635113021 && second == 'Extra Large'){
          secondLabel.innerHTML = '75"X100"'
        } else {
          secondLabel.innerHTML = second;
        }
        
        let arr3
        if (_opts[2]){
          let arr3 = _opts[2].replaceAll(' ', '-').replaceAll('(', '').replaceAll(')', '').split('-')

          let id3 = arr3.map(str => capitalizeFirstLetter(str.toLowerCase())).join('-')
          let thirdLabel = document.querySelector('#selected'+id3);
          if (thirdLabel != null) {
            thirdLabel.innerHTML = third;
          }
        }
        

        if ({{ product.id | json }} !== 4492419530813) { // LAYR Pillow
          let activeSlide = document.querySelector('img.lazyautosizes.lazyautosizes');
          var slideToShow = document.querySelector(`img[data-photoswipe-src="${imgAvailable}"]`);

          mainSlides.forEach(slide => {
            slide.style.display = 'none';
            let img = slide.firstElementChild.firstElementChild.firstElementChild;
            img.style.opacity = 0;
            img.classList.remove('lazyautosizes')
            img.classList.remove('lazyloaded')
          }) 

          slideToShow.classList.add('lazyautosizes')
          slideToShow.classList.add('lazyloaded');
          slideToShow.style.opacity = 1;
          slideToShow.parentNode.parentNode.parentNode.style.display = 'block'
        }
      } else if({{ product.id | json }} === 4492419530813) { //layr !!!!
		    let firstLabel = document.querySelector('#selected'+type);
        firstLabel.innerHTML = value;
      }
    }
  
    function imageAvailable(value,value2){
      const variants = window.ourProduct.variants;
      let materialAvailable = variants.filter(variant => variant.option1 === value && variant.option2 === value2 && variant.hasOwnProperty('featured_media'));
      
      if(materialAvailable.length == 0){
        materialAvailable = variants.filter(variant => variant.option1 === value && variant.hasOwnProperty('featured_media'));
      }
      if(materialAvailable.length > 0){ return materialAvailable[0].featured_media.preview_image.src.split('https:')[1].split('.png').join('_1800x1800.png')} else {
        return variants[0].featured_media.preview_image.src.split('https:')[1].split('.png').join('_1800x1800.png')
      }
    }

    function updateLabels(){
      let currentSelection = userSelection();
      let first = currentSelection[_opts[0]];
      let second = currentSelection[_opts[1]];
      let third = currentSelection[_opts[2]];

      let firstLabel = document.querySelector('#selected'+_opts[0]);
      if ({{product.id}} == 6824646279229 && first == 'Cotton'){
        firstLabel.innerHTML = 'Cotton with 37.5 Technology'
      } else if ({{product.id}} == 6824646279229 && first == 'Bamboo Viscose'){
        firstLabel.innerHTML = '100% Viscose from Bamboo'
      } else {
        firstLabel.innerHTML = first;
      }
      
      let secondLabel = document.querySelector('#selected'+_opts[1].replaceAll(' ', '-').replaceAll('(', '').replaceAll(')', ''));
      //throw page
      if ({{product.id}} == 6789635113021 && second == 'Individual'){
        secondLabel.innerHTML = '50"X70"'
      } else if ({{product.id}} == 6789635113021 && second == 'Extra Large'){
        secondLabel.innerHTML = '75"X100"'
      } else {
        secondLabel.innerHTML = second;
      }
      
      let thirdLabel
      if (_opts[2]){
        thirdLabel = document.querySelector('#selected'+_opts[2].replaceAll(' ', '-').replaceAll('(', '').replaceAll(')', ''));
      }
        
      if (thirdLabel != null) {
        thirdLabel.innerHTML = third;
      }


    }

    function showCurrentVariantAvailable(){
      const mainSlides = [...document.querySelector('.main-carousel').children];
      let currentSelection = userSelection();
      let first = currentSelection[_opts[0]];
      let second = currentSelection[_opts[1]];
      let third = currentSelection[_opts[2]];
      
      if (userSelection()['Pack Size'] !== '2-Pack'){
        $('#pack-50-off').css({color: 'grey'})
      }
      
      let imgAvailable = imageAvailable(first, second);
      updateLabels
      
      if ({{ product.id | json }} !== 4492419530813) { // LAYR Pillow
        let activeSlide = document.querySelector('img.lazyautosizes.lazyautosizes');
        var slideToShow = document.querySelector(`img[data-photoswipe-src="${imgAvailable}"]`);

        mainSlides.forEach(slide => {
          slide.style.display = 'none';
          let img = slide.firstElementChild.firstElementChild.firstElementChild;
          img.style.opacity = 0;
          img.classList.remove('lazyautosizes')
          img.classList.remove('lazyloaded')
        })   

        slideToShow.classList.add('lazyautosizes')
        slideToShow.classList.add('lazyloaded');
        slideToShow.style.opacity = 1;
        slideToShow.parentNode.parentNode.parentNode.style.display = 'block'
      }
    }
  
  function updateAmount(value){
    let amountLabel = document.querySelector('#selectedAmount');
    if (amountLabel !== null) {
      amountLabel.innerHTML = value;
    }
  }
  
  function selectedAmount(){
    let amountLabel = document.querySelector('#selectedAmount');
    if (amountLabel !== null) {
      let value = [...document.querySelectorAll(`label[data-type="Amount-option"]`)].filter(n => n.control.checked)[0].control.value
      amountLabel.innerHTML = value;
    }
  }
  
//   -------------------------------------------------------------------------------------
  function clickOption(value, option){
    
    let smallSelected = value === '8 lbs | 42"x56"'
    let xLageSelected = value === '30 lbs | 100"x85"'

	  let otherOp = _opts.filter(opt => opt !== option)
    let labels = {[_opts[0]]: 'option1', [_opts[1]]: 'option2', [_opts[2]]: 'option3'}
    
    let variants = availablesWithOption(value);  
    let options = getOptionsFor(otherOp[0]);
    
    options.forEach(label => {
      if(smallSelected && smallNeverInStock.includes(label.control.value)){
        label.parentElement.style.display = 'none'
      } else if(xLageSelected && xLargeNeverInStock.includes(label.control.value)){
        label.parentElement.style.display = 'none'
      } else {
        if(label.parentElement.classList.contains('variant-input-pack-size')){
           label.parentElement.style.display = 'inline-flex'
        } else {
           label.parentElement.style.display = 'inline-flex'
        }
      }

    });
    
    let allV = allVariants.filter(variant => variant.options.includes(value)); 
    let label = selectOptionsFor(otherOp[0], varianstAvailable(allV, otherOp[0])[labels[otherOp[0]]])

    if(variants.length > 0){
      allUnAvailableFor(options);   
      showAvailableFor(variants, options, otherOp[0]);
      
      if((smallSelected && smallNeverInStock.includes(label.control.value)) || (xLageSelected && xLargeNeverInStock.includes(label.control.value))){
        label = selectOptionsFor(otherOp[0], varianstAvailable(variants, otherOp[0])[labels[otherOp[0]]])
        let variants1 = availablesWithOption(label.control.value);  
        let options1 = getOptionsFor(option);
        
        if(variants1.length > 0){
          allUnAvailableFor(options1);   
          showAvailableFor(variants1, options1, option);
          
        }
      }
   
    } else {
      allUnAvailableFor(options);   
      showAvailableFor(variants, options, otherOp[0]);
    }
    
    {% if product.id == 4405624864829 %} // Premium Bamboo Sheets
    	let color; 
        let size;
    	if(option === 'Size'){
          color = getOptionsFor('Color').filter(n => n.control.checked)[0].control.value;
          size = value;
		} else {
          color = value;
          size = getOptionsFor('Size').filter(n => n.control.checked)[0].control.value;;
		}
    	checkAvailabilityOfPillowcase(color, size);
    
    {% elsif product.id == 2140387999813 or product.id == 1482350919749 %} // Cooling Weighted Blankets or Removable Cover Weighted Blankets
      let size;
      let mat;
      if(option === 'Size'){
        size = value;
        mat = getOptionsFor('Material').filter(n => n.control.checked)[0].control.value;
      } else {
        size = getOptionsFor('Size').filter(n => n.control.checked)[0].control.value;
        mat = value
      }
    
      checkAvailabilityOfBlankets(size, mat)
      
    {% elsif product.id == 6824646279229 %}// duvet cover
      let size;
      let fabric;
      let color
      if(option === 'Size'){
        size = value;
        fabric = getOptionsFor('Fabric').filter(n => n.control.checked)[0].control.value;
        color = getOptionsFor('Color').filter(n => n.control.checked)[0].control.value;
      } else if (option === 'Fabric') {
        fabric = value
        size = getOptionsFor('Size').filter(n => n.control.checked)[0].control.value;
        color = getOptionsFor('Color').filter(n => n.control.checked)[0].control.value;
      } else {
        color = value
        size = getOptionsFor('Size').filter(n => n.control.checked)[0].control.value;
        fabric = getOptionsFor('Fabric').filter(n => n.control.checked)[0].control.value;
      }
      
      checkAvailabilityOfDuvet(size,fabric,color)
    {% elsif product.id == 4492419530813 %} // Layr
      function layrUpdate(od){
        let first = true
        if(window.screen.width >= 768){
          $('.image-wrap img:not([role="presentation"])').css({opacity: 1})
          let imagesShowing = 0
          let singleSelected = userSelection()['Pack Size'] == 'Single'
          $('.product__thumb').each(function(){
              let name = this.href.split('products/')[1]
                
              if (imagesShowing >= 5){
                $(this.parentNode.parentNode).hide()
              } else if (singleSelected && name.toLowerCase().includes('single')){
                $(this.parentNode.parentNode).show()
                imagesShowing++
              } else if (!singleSelected && name.toLowerCase().includes('double')){
                $(this.parentNode.parentNode).show()
                imagesShowing++
              } else{
                $(this.parentNode.parentNode).show()
              }
          })
        } else {
          $('.dot-carousel').each(function(){
              let name = this.href.split('products/')[1]
              
              if (imagesShowing >= 5){
                $(this).hide()
              } else if (singleSelected && name.downcase().includes('single')){
                $(this).show()
                imagesShowing++
              } else if (!singleSelected && name.downcase().includes('double')){
                $(this).show()
                imagesShowing++
              } else{
                $(this).hide()
              }
          })
        }

      }
      
      if((value === '2 Pillows' || value === '2-Pack') && option === 'Pack-Size'){
        document.getElementById('layr-pillow-offer').style.display = 'block';
        $(".two-pack").remove()
        $(".product-single__meta").append(`<div class='two-pack'>2-pack includes one FIRM insert (1" & 2" pieces) for sharing</div>`)
        document.querySelector('.layr-pillow-2-pack').style.color = 'white';

      } else if((value === '1 Pillow' || value === 'Single') && option === 'Pack-Size'){
        document.getElementById('layr-pillow-offer').style.display = 'none';
        $(".two-pack").remove()
        document.querySelector('.layr-pillow-2-pack').style.color = 'grey';

      } else if (value === 'King') {
        
      } else {
        
      }
      layrUpdate()
    {% endif %}
      if ('{{product.handle}}' == 'duvet-cover' && value == 'Cotton' && userSelection().Color != 'Charcoal'){
        selectOptionsFor('Color', 'White')
      }
        
      if(window.screen.width >= 768) updateCarousel(value, option);
      if(window.screen.width < 768) dotCarousel(value, option);
      if ('{{product.handle}}' == 'duvet-cover' && value == 'Cotton' && userSelection().Color != 'Charcoal'){
        selectOptionsFor('Color', 'White')
      }
      setTimeout(updateLabels,500)
  }
 
  function clickQty(value) {
    document.querySelector('.js-qty__num').value = value
    let qtyLabel = document.querySelector('#selectedQuantity');
    qtyLabel.innerHTML = value;
    let activeBtn = document.querySelector('.qty-buttons button.active')
    let clickedBtn = document.querySelector('.qty-buttons button[value="'+value+'"]')
    activeBtn && activeBtn.classList.remove('active')
    clickedBtn.classList.add('active')
    
    let inputQyt = document.querySelector('input[name="quantity"]')
    inputQyt.value = value
  }
  
//   -------------------------------------------------------------------------------------

  window.addEventListener('load', (event) => {
    let oOp = _opts.filter(op => op !== "Size")[0]
    if(window.screen.width >= 768) updateCarousel(userSelection()[oOp], oOp);
    if(window.screen.width < 768) dotCarousel(userSelection()[oOp], oOp);

   
    if(userSelection().Size) {
    	let options = getOptionsFor('Size')
        
        options.forEach(label => label.control.value === userSelection().Size ? label.click() : null)
    }
    if(userSelection().Color) {
    	let options = getOptionsFor('Color')
        
        options.forEach(label => label.control.value === userSelection().Color ? label.click() : null)
    }
    if(userSelection().Material) {
    	let options = getOptionsFor('Material')
        
        options.forEach(label => label.control.value === userSelection().Material ? label.click() : null)
    }
  })

  
  // Left and right swipe on mobile size. The moveLeft and moveRight functions are in product-images
  document.querySelector('.main-carousel').addEventListener('touchstart', handleTouchStart, false);        
  document.querySelector('.main-carousel').addEventListener('touchmove', handleTouchMove, false);

  var xDown = null;                                                        
  var yDown = null;

  function getTouches(evt) {
    return evt.touches ||             // browser API
           evt.originalEvent.touches; // jQuery
  }                                                     

  function handleTouchStart(evt) {
      const firstTouch = getTouches(evt)[0];                                      
      xDown = firstTouch.clientX;                                      
      yDown = firstTouch.clientY;                                      
  };                                                

  function handleTouchMove(evt) {
      if ( ! xDown || ! yDown ) {
          return;
      }

      var xUp = evt.touches[0].clientX;                                    
      var yUp = evt.touches[0].clientY;

      var xDiff = xDown - xUp;
      var yDiff = yDown - yUp;

      if ( Math.abs( xDiff ) > Math.abs( yDiff ) ) {/*most significant*/
          if ( xDiff > 0 ) {
              /* left swipe */
              dotRight()
          } else {
              /* right swipe */
              dotLeft()
          }                       
      }
      /* reset values */
      xDown = null;
      yDown = null;                                             
  };
</script>

<style>
  .two-pack{
  	font-weight: bold;
	font-style: italic;
    font-size: 12px;
  }
   @media only screen and (max-width: 769px) {
     .two-pack{
		letter-spacing: 0.2px;
	    font-size: 9px;
	  }
   }
</style>